#!/usr/bin/env node

app = require('../app');
debug = require('debug')('chat2:server');
http = require('http');

config = require('../config');
/**
 * Get port from environment and store in Express.
 */

// port = normalizePort(process.env.PORT || '3000');
port = config.get('port');
app.set('port', port);

server = http.createServer(app); // Create HTTP server.

// Listen on provided port, on all network interfaces.
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

function normalizePort(val) { // Normalize a port into a number, string, or false.
  port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    return port; // port number
  }

  return false;
}

function onError(error) { // Event listener for HTTP server "error" event.
  if (error.syscall !== 'listen') {
    throw error;
  }

  bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

function onListening() {  // Event listener for HTTP server "listening" event.
  addr = server.address();
  bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
}
